<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DSYING</title>
  
  <subtitle>DingSheng&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-26T03:31:23.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>[object Object]</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>javascript之—__proto__和prototype</title>
    <link href="http://yoursite.com/2018/08/25/%E5%8E%9F%E5%9E%8B%E9%93%BE/"/>
    <id>http://yoursite.com/2018/08/25/原型链/</id>
    <published>2018-08-25T06:55:11.000Z</published>
    <updated>2018-08-26T03:31:23.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="全局函数"><a href="#全局函数" class="headerlink" title="全局函数"></a>全局函数</h2><p> javascript提供了一些全局函数如 Number()、String()、Boolean()、Object()等<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//两者有和区别呢？</span></span><br><span class="line"><span class="keyword">var</span> n1 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> n2 = <span class="keyword">new</span> <span class="built_in">Number</span>(<span class="number">1</span>);</span><br><span class="line"><span class="comment">//区别点：n1 和 n2 的内存图不一样</span></span><br><span class="line"><span class="comment">//n2是一个对象，对象内有Number提供的api供内使用，而n1只是一个基本类型的number</span></span><br><span class="line">n2.toString() <span class="comment">// "1"</span></span><br><span class="line"><span class="keyword">typeof</span> n1 === <span class="string">"number"</span> <span class="comment">//true</span></span><br><span class="line"><span class="keyword">typeof</span> n2 === <span class="string">"object"</span> <span class="comment">//true</span></span><br></pre></td></tr></table></figure></p><p><img src="https://user-gold-cdn.xitu.io/2018/7/8/16477f342d3017d6?w=1966&amp;h=864&amp;f=jpeg&amp;s=81293" alt=""><br>为什么 n1.toString() 也能使用?<br>Javascript中三种原始类型的值——数值、字符串、布尔值分别有其相应的<a href="http://javascript.ruanyifeng.com/stdlib/wrapper.html" target="_blank" rel="noopener">“包装对象”</a>，在一定条件下，原始类型会自动转为对象。</p><p><img src="https://user-gold-cdn.xitu.io/2018/7/8/164780b130eda3e4?w=2128&amp;h=860&amp;f=jpeg&amp;s=205003" alt=""></p><p><img src="https://user-gold-cdn.xitu.io/2018/7/8/16478163b1fb7935?w=1532&amp;h=694&amp;f=jpeg&amp;s=143256" alt=""></p><h2 id="共用属性"><a href="#共用属性" class="headerlink" title="共用属性"></a>共用属性</h2><p>对象是由构造函数生成的，同一个构造函数生成的不同实例对象共享一些属性(公用属性)<br>var 实例对象 = new 构造函数()</p><p><img src="https://user-gold-cdn.xitu.io/2018/7/8/16478ac25fd411e2?w=3800&amp;h=1610&amp;f=jpeg&amp;s=649793" alt=""></p><p>每一个实例对象都有一个<strong>proto</strong>属性，它指向的是构造它的函数的prototype属性，该属性保存着该类对象所共享的属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">n.__proto__ === <span class="built_in">Number</span>.prototype</span><br><span class="line">s.__proto__ === <span class="built_in">String</span>.prototype</span><br><span class="line">b.__proto__ === <span class="built_in">Boolean</span>.prototype</span><br><span class="line">o.__proto__ === <span class="built_in">Object</span>.prototype</span><br></pre></td></tr></table></figure><h3 id="浏览器为我们做了一些事情"><a href="#浏览器为我们做了一些事情" class="headerlink" title="浏览器为我们做了一些事情"></a>浏览器为我们做了一些事情</h3><p><img src="https://user-gold-cdn.xitu.io/2018/7/8/16478b42b26b1b6d?w=3086&amp;h=1592&amp;f=jpeg&amp;s=237887" alt=""><br><img src="https://user-gold-cdn.xitu.io/2018/7/8/16478aee240132ad?w=3330&amp;h=1698&amp;f=jpeg&amp;s=249685" alt=""><br>Object.prototype Number.prototype String.prototype Boolean.prototype 是由浏览器事先提供好的</p><p>你只需要通过 var s = new String(‘123’)就完成了 s的所有api绑定 </p><h3 id="proto-和-prototype"><a href="#proto-和-prototype" class="headerlink" title="proto 和 prototype"></a><strong>proto</strong> 和 prototype</h3><p><img src="https://user-gold-cdn.xitu.io/2018/7/8/16478b6353b9c219?w=2060&amp;h=1746&amp;f=jpeg&amp;s=264820" alt=""></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Number</span>.__proto__ === <span class="built_in">Function</span>.prototype</span><br><span class="line"><span class="built_in">String</span>.__proto__ === <span class="built_in">Function</span>.prototype</span><br><span class="line"><span class="built_in">Boolean</span>.__proto__ === <span class="built_in">Function</span>.prototype</span><br><span class="line"><span class="built_in">Function</span>.__proto__ === <span class="built_in">Function</span>.prototype</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;全局函数&quot;&gt;&lt;a href=&quot;#全局函数&quot; class=&quot;headerlink&quot; title=&quot;全局函数&quot;&gt;&lt;/a&gt;全局函数&lt;/h2&gt;&lt;p&gt; javascript提供了一些全局函数如 Number()、String()、Boolean()、Object()等&lt;br
      
    
    </summary>
    
      <category term="学习笔记" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/08/25/hello-world/"/>
    <id>http://yoursite.com/2018/08/25/hello-world/</id>
    <published>2018-08-25T06:51:35.000Z</published>
    <updated>2018-08-25T13:57:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
